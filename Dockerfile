# Automatically generated by hassfest.
#
# To update, run python3 -m script.hassfest -p docker
FROM ghcr.io/home-assistant/home-assistant@sha256:9474669a1360316fdbf8be19196d7a56afd9954719831d12b2632b8b1a6add18

# Synchronize with homeassistant/core.py:async_stop
ENV \
    S6_SERVICES_GRACETIME=240000 \
    UV_SYSTEM_PYTHON=true

ARG QEMU_CPU

# Install uv
RUN pip3 install uv
WORKDIR /usr/src

## Setup Home Assistant Core dependencies
COPY requirements.txt homeassistant/
COPY homeassistant/package_constraints.txt homeassistant/homeassistant/
RUN \
    uv pip install \
        --no-build \
        -r homeassistant/requirements.txt

COPY requirements_all.txt home_assistant_frontend-* home_assistant_intents-* homeassistant/
RUN \
    if ls homeassistant/home_assistant_*.whl 1> /dev/null 2>&1; then \
        uv pip install homeassistant/home_assistant_*.whl; \
    fi \
    && uv pip install \
        --no-build \
        -r homeassistant/requirements_all.txt

## Setup Home Assistant Core
COPY . homeassistant/
RUN \
    uv pip install \
        -e ./homeassistant \
    && python3 -m compileall \
        homeassistant/homeassistant

# Copy the pyhap folder to site-packages

# Home Assistant S6-Overlay
COPY rootfs /

# Copy the area_monitor.py script to the container
COPY area_monitor.py /usr/local/bin/area_monitor.py

# Give execute permissions to the script
RUN chmod +x /usr/local/bin/area_monitor.py

# Copy the run_after_start.sh script to the container
COPY run_after_start.sh /usr/local/bin/run_after_start.sh

# Give execute permissions to the script
RUN chmod +x /usr/local/bin/run_after_start.sh

WORKDIR /config

# Run the area_monitor.py script and Home Assistant Core
ENTRYPOINT ["/bin/bash", "-c", "/usr/local/bin/run_after_start.sh & /usr/local/bin/area_monitor.py & exec python3 -m homeassistant --config /config"]